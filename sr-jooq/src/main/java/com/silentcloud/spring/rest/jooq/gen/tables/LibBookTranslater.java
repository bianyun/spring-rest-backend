/*
 * This file is generated by jOOQ.
 */
package com.silentcloud.spring.rest.jooq.gen.tables;


import com.silentcloud.spring.rest.jooq.gen.DefaultSchema;
import com.silentcloud.spring.rest.jooq.gen.tables.records.LibBookTranslaterRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LibBookTranslater extends TableImpl<LibBookTranslaterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>LIB_BOOK_TRANSLATER</code>
     */
    public static final LibBookTranslater LIB_BOOK_TRANSLATER = new LibBookTranslater();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LibBookTranslaterRecord> getRecordType() {
        return LibBookTranslaterRecord.class;
    }

    /**
     * The column <code>LIB_BOOK_TRANSLATER.BOOK_ID</code>.
     */
    public final TableField<LibBookTranslaterRecord, Long> BOOK_ID = createField(DSL.name("BOOK_ID"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>LIB_BOOK_TRANSLATER.TRANSLATER_ID</code>.
     */
    public final TableField<LibBookTranslaterRecord, Long> TRANSLATER_ID = createField(DSL.name("TRANSLATER_ID"), SQLDataType.BIGINT.nullable(false), this, "");

    private LibBookTranslater(Name alias, Table<LibBookTranslaterRecord> aliased) {
        this(alias, aliased, null);
    }

    private LibBookTranslater(Name alias, Table<LibBookTranslaterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>LIB_BOOK_TRANSLATER</code> table reference
     */
    public LibBookTranslater(String alias) {
        this(DSL.name(alias), LIB_BOOK_TRANSLATER);
    }

    /**
     * Create an aliased <code>LIB_BOOK_TRANSLATER</code> table reference
     */
    public LibBookTranslater(Name alias) {
        this(alias, LIB_BOOK_TRANSLATER);
    }

    /**
     * Create a <code>LIB_BOOK_TRANSLATER</code> table reference
     */
    public LibBookTranslater() {
        this(DSL.name("LIB_BOOK_TRANSLATER"), null);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public LibBookTranslater as(String alias) {
        return new LibBookTranslater(DSL.name(alias), this);
    }

    @Override
    public LibBookTranslater as(Name alias) {
        return new LibBookTranslater(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LibBookTranslater rename(String name) {
        return new LibBookTranslater(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LibBookTranslater rename(Name name) {
        return new LibBookTranslater(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
