/*
 * This file is generated by jOOQ.
 */
package com.silentcloud.spring.rest.jooq.gen.tables;


import com.silentcloud.spring.rest.jooq.gen.DefaultSchema;
import com.silentcloud.spring.rest.jooq.gen.tables.records.SysRoleRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRole extends TableImpl<SysRoleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>SYS_ROLE</code>
     */
    public static final SysRole SYS_ROLE = new SysRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysRoleRecord> getRecordType() {
        return SysRoleRecord.class;
    }

    /**
     * The column <code>SYS_ROLE.ID</code>.
     */
    public final TableField<SysRoleRecord, Long> ID = createField(DSL.name("ID"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>SYS_ROLE.CREATED_TIME</code>.
     */
    public final TableField<SysRoleRecord, LocalDateTime> CREATED_TIME = createField(DSL.name("CREATED_TIME"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>SYS_ROLE.LAST_MODIFIED_TIME</code>.
     */
    public final TableField<SysRoleRecord, LocalDateTime> LAST_MODIFIED_TIME = createField(DSL.name("LAST_MODIFIED_TIME"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>SYS_ROLE.NAME</code>.
     */
    public final TableField<SysRoleRecord, String> NAME = createField(DSL.name("NAME"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>SYS_ROLE.VALUE</code>.
     */
    public final TableField<SysRoleRecord, String> VALUE = createField(DSL.name("VALUE"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>SYS_ROLE.CREATED_BY_ID</code>.
     */
    public final TableField<SysRoleRecord, Long> CREATED_BY_ID = createField(DSL.name("CREATED_BY_ID"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>SYS_ROLE.LAST_MODIFIED_BY_ID</code>.
     */
    public final TableField<SysRoleRecord, Long> LAST_MODIFIED_BY_ID = createField(DSL.name("LAST_MODIFIED_BY_ID"), SQLDataType.BIGINT, this, "");

    private SysRole(Name alias, Table<SysRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysRole(Name alias, Table<SysRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>SYS_ROLE</code> table reference
     */
    public SysRole(String alias) {
        this(DSL.name(alias), SYS_ROLE);
    }

    /**
     * Create an aliased <code>SYS_ROLE</code> table reference
     */
    public SysRole(Name alias) {
        this(alias, SYS_ROLE);
    }

    /**
     * Create a <code>SYS_ROLE</code> table reference
     */
    public SysRole() {
        this(DSL.name("SYS_ROLE"), null);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public SysRole as(String alias) {
        return new SysRole(DSL.name(alias), this);
    }

    @Override
    public SysRole as(Name alias) {
        return new SysRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRole rename(String name) {
        return new SysRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysRole rename(Name name) {
        return new SysRole(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, LocalDateTime, LocalDateTime, String, String, Long, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
