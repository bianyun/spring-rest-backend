/*
 * This file is generated by jOOQ.
 */
package com.silentcloud.springrest.jooq.gen.tables;


import com.silentcloud.springrest.jooq.gen.DefaultSchema;
import com.silentcloud.springrest.jooq.gen.tables.records.SysUserRecord;
import com.silentcloud.springrest.model.enums.Gender;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysUser extends TableImpl<SysUserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>SYS_USER</code>
     */
    public static final SysUser SYS_USER = new SysUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysUserRecord> getRecordType() {
        return SysUserRecord.class;
    }

    /**
     * The column <code>SYS_USER.ID</code>.
     */
    public final TableField<SysUserRecord, Long> ID = createField(DSL.name("ID"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>SYS_USER.CREATED_TIME</code>.
     */
    public final TableField<SysUserRecord, LocalDateTime> CREATED_TIME = createField(DSL.name("CREATED_TIME"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>SYS_USER.LAST_MODIFIED_TIME</code>.
     */
    public final TableField<SysUserRecord, LocalDateTime> LAST_MODIFIED_TIME = createField(DSL.name("LAST_MODIFIED_TIME"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>SYS_USER.ACTIVE</code>.
     */
    public final TableField<SysUserRecord, Boolean> ACTIVE = createField(DSL.name("ACTIVE"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>SYS_USER.DELETED</code>.
     */
    public final TableField<SysUserRecord, Boolean> DELETED = createField(DSL.name("DELETED"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>SYS_USER.EMAIL</code>.
     */
    public final TableField<SysUserRecord, String> EMAIL = createField(DSL.name("EMAIL"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>SYS_USER.GENDER</code>.
     */
    public final TableField<SysUserRecord, Gender> GENDER = createField(DSL.name("GENDER"), SQLDataType.INTEGER, this, "", org.jooq.Converter.of(Integer.class, Gender.class, i -> Gender.HELPER.byId(i), Gender::getId));

    /**
     * The column <code>SYS_USER.MOBILE</code>.
     */
    public final TableField<SysUserRecord, String> MOBILE = createField(DSL.name("MOBILE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>SYS_USER.NICKNAME</code>.
     */
    public final TableField<SysUserRecord, String> NICKNAME = createField(DSL.name("NICKNAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>SYS_USER.PASSWORD</code>.
     */
    public final TableField<SysUserRecord, String> PASSWORD = createField(DSL.name("PASSWORD"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>SYS_USER.PICTURE_URL</code>.
     */
    public final TableField<SysUserRecord, String> PICTURE_URL = createField(DSL.name("PICTURE_URL"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>SYS_USER.REALNAME</code>.
     */
    public final TableField<SysUserRecord, String> REALNAME = createField(DSL.name("REALNAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>SYS_USER.USERNAME</code>.
     */
    public final TableField<SysUserRecord, String> USERNAME = createField(DSL.name("USERNAME"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>SYS_USER.CREATED_BY_ID</code>.
     */
    public final TableField<SysUserRecord, Long> CREATED_BY_ID = createField(DSL.name("CREATED_BY_ID"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>SYS_USER.LAST_MODIFIED_BY_ID</code>.
     */
    public final TableField<SysUserRecord, Long> LAST_MODIFIED_BY_ID = createField(DSL.name("LAST_MODIFIED_BY_ID"), SQLDataType.BIGINT, this, "");

    private SysUser(Name alias, Table<SysUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysUser(Name alias, Table<SysUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>SYS_USER</code> table reference
     */
    public SysUser(String alias) {
        this(DSL.name(alias), SYS_USER);
    }

    /**
     * Create an aliased <code>SYS_USER</code> table reference
     */
    public SysUser(Name alias) {
        this(alias, SYS_USER);
    }

    /**
     * Create a <code>SYS_USER</code> table reference
     */
    public SysUser() {
        this(DSL.name("SYS_USER"), null);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public SysUser as(String alias) {
        return new SysUser(DSL.name(alias), this);
    }

    @Override
    public SysUser as(Name alias) {
        return new SysUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUser rename(String name) {
        return new SysUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUser rename(Name name) {
        return new SysUser(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, LocalDateTime, LocalDateTime, Boolean, Boolean, String, Gender, String, String, String, String, String, String, Long, Long> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
