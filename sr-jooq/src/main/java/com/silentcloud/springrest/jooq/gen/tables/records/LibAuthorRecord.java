/*
 * This file is generated by jOOQ.
 */
package com.silentcloud.springrest.jooq.gen.tables.records;


import com.silentcloud.springrest.jooq.gen.tables.LibAuthor;
import com.silentcloud.springrest.model.enums.Country;
import com.silentcloud.springrest.model.enums.Gender;
import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LibAuthorRecord extends TableRecordImpl<LibAuthorRecord> implements Record8<Long, LocalDateTime, LocalDateTime, Country, Gender, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LIB_AUTHOR.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>LIB_AUTHOR.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>LIB_AUTHOR.CREATED_TIME</code>.
     */
    public void setCreatedTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>LIB_AUTHOR.CREATED_TIME</code>.
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>LIB_AUTHOR.LAST_MODIFIED_TIME</code>.
     */
    public void setLastModifiedTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>LIB_AUTHOR.LAST_MODIFIED_TIME</code>.
     */
    public LocalDateTime getLastModifiedTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>LIB_AUTHOR.COUNTRY</code>.
     */
    public void setCountry(Country value) {
        set(3, value);
    }

    /**
     * Getter for <code>LIB_AUTHOR.COUNTRY</code>.
     */
    public Country getCountry() {
        return (Country) get(3);
    }

    /**
     * Setter for <code>LIB_AUTHOR.GENDER</code>.
     */
    public void setGender(Gender value) {
        set(4, value);
    }

    /**
     * Getter for <code>LIB_AUTHOR.GENDER</code>.
     */
    public Gender getGender() {
        return (Gender) get(4);
    }

    /**
     * Setter for <code>LIB_AUTHOR.NAME</code>.
     */
    public void setName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>LIB_AUTHOR.NAME</code>.
     */
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>LIB_AUTHOR.CREATED_BY_ID</code>.
     */
    public void setCreatedById(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>LIB_AUTHOR.CREATED_BY_ID</code>.
     */
    public Long getCreatedById() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>LIB_AUTHOR.LAST_MODIFIED_BY_ID</code>.
     */
    public void setLastModifiedById(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>LIB_AUTHOR.LAST_MODIFIED_BY_ID</code>.
     */
    public Long getLastModifiedById() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, LocalDateTime, LocalDateTime, Country, Gender, String, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, LocalDateTime, LocalDateTime, Country, Gender, String, Long, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LibAuthor.LIB_AUTHOR.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return LibAuthor.LIB_AUTHOR.CREATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return LibAuthor.LIB_AUTHOR.LAST_MODIFIED_TIME;
    }

    @Override
    public Field<Country> field4() {
        return LibAuthor.LIB_AUTHOR.COUNTRY;
    }

    @Override
    public Field<Gender> field5() {
        return LibAuthor.LIB_AUTHOR.GENDER;
    }

    @Override
    public Field<String> field6() {
        return LibAuthor.LIB_AUTHOR.NAME;
    }

    @Override
    public Field<Long> field7() {
        return LibAuthor.LIB_AUTHOR.CREATED_BY_ID;
    }

    @Override
    public Field<Long> field8() {
        return LibAuthor.LIB_AUTHOR.LAST_MODIFIED_BY_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime component3() {
        return getLastModifiedTime();
    }

    @Override
    public Country component4() {
        return getCountry();
    }

    @Override
    public Gender component5() {
        return getGender();
    }

    @Override
    public String component6() {
        return getName();
    }

    @Override
    public Long component7() {
        return getCreatedById();
    }

    @Override
    public Long component8() {
        return getLastModifiedById();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime value3() {
        return getLastModifiedTime();
    }

    @Override
    public Country value4() {
        return getCountry();
    }

    @Override
    public Gender value5() {
        return getGender();
    }

    @Override
    public String value6() {
        return getName();
    }

    @Override
    public Long value7() {
        return getCreatedById();
    }

    @Override
    public Long value8() {
        return getLastModifiedById();
    }

    @Override
    public LibAuthorRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LibAuthorRecord value2(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public LibAuthorRecord value3(LocalDateTime value) {
        setLastModifiedTime(value);
        return this;
    }

    @Override
    public LibAuthorRecord value4(Country value) {
        setCountry(value);
        return this;
    }

    @Override
    public LibAuthorRecord value5(Gender value) {
        setGender(value);
        return this;
    }

    @Override
    public LibAuthorRecord value6(String value) {
        setName(value);
        return this;
    }

    @Override
    public LibAuthorRecord value7(Long value) {
        setCreatedById(value);
        return this;
    }

    @Override
    public LibAuthorRecord value8(Long value) {
        setLastModifiedById(value);
        return this;
    }

    @Override
    public LibAuthorRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, Country value4, Gender value5, String value6, Long value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LibAuthorRecord
     */
    public LibAuthorRecord() {
        super(LibAuthor.LIB_AUTHOR);
    }

    /**
     * Create a detached, initialised LibAuthorRecord
     */
    public LibAuthorRecord(Long id, LocalDateTime createdTime, LocalDateTime lastModifiedTime, Country country, Gender gender, String name, Long createdById, Long lastModifiedById) {
        super(LibAuthor.LIB_AUTHOR);

        setId(id);
        setCreatedTime(createdTime);
        setLastModifiedTime(lastModifiedTime);
        setCountry(country);
        setGender(gender);
        setName(name);
        setCreatedById(createdById);
        setLastModifiedById(lastModifiedById);
    }
}
